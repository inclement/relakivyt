#:import Vector kivy.vector.Vector
#:import sqrt math.sqrt
#:import atan2 math.atan2
#:import sin math.sin
#:import cos math.cos
#:import tanh math.tanh

<GameLevelContainer>:
    gamelevel: gamelevel
    GameLevel:
        id: gamelevel
        size: min(root.size), min(root.size)
        size_hint: None, None

<LorentzBackground>:
    Image:
        size_hint: 1, 1
        pos_hint: {'x': 0, 'y': 0}
        allow_stretch: True
        keep_ratio: False
        source: 'colours2.png'

<GameLevel>:
    spaceship: spaceship
    canvas:
        Color:
            rgba: 0.1, 0.1, 0.1, 1
        Rectangle:
            size: self.size
            pos: self.pos
    LorentzBackground:
        id: lbg
        pos: Vector(root.pos) + Vector(self.pos_offset)
        spaceship: spaceship
        boost_speed: self.spaceship.speed if self.spaceship else 0.0
        pos_fraction: (Vector(self.spaceship.center) - Vector(root.pos)) / Vector(root.size) if self.spaceship else [0.0, 0.0]
    Spaceship:
        pos: root.pos
        id: spaceship
        
<Spaceship>:
    size_hint: None, None
    size: Vector(self.parent.size)/10. if self.parent else (200, 200)
    pos_hint: {}

    direction: atan2(self.naive_velocity[1], self.naive_velocity[0])
    naive_speed: sqrt(sum([v**2 for v in self.naive_velocity]))
    speed: tanh(self.naive_speed)
    velocity: self.speed * Vector([cos(self.direction), sin(self.direction)])

    BoxLayout:
        size: Vector(self.parent.size) if self.parent else (200, 200)
        canvas:
            Color:
                rgba: 0, 0, 1, 1
            Ellipse:
                pos: self.pos
                size: self.size
            Color:
                rgba: 0,1,0,1
            Ellipse
                pos: Vector(self.pos) + Vector(self.size)*0.2
                size: Vector(self.size) * 0.6
            Color:
                rgba: 1, 0, 0, 1
            Ellipse:
                pos: Vector(self.center) - Vector(self.size)/20.
                size: Vector(self.size) / 10.
            Color:
                rgb: 1, 0, 1
            Line:
                points: [self.center[0], self.center[1], self.center[0] + 0.2*root.speed*self.width*cos(root.direction), self.center[1] + 0.2*root.speed*self.height*sin(root.direction)]
                width: 2
            
                